{"content": "<article><h1>Handling Event</h1><p>事件绑定与HTML中的绑定区别：</p><ul><li><p>React事件绑定使用驼峰式，HTML中使用小写格式</p></li><li><p>React使用函数指定事件处理，HTML使用字符串形式</p></li></ul><pre lang=\"html\"><code>// HTML\n&lt;button onclick=\"activateLasers()\"&gt;\n  Activate Lasers\n&lt;/button&gt;\n\n// React\n&lt;button onClick={activateLasers}&gt;\n  Activate Lasers\n&lt;/button&gt;</code></pre><ul><li><p>与HTML中事件处理函数不同，React中不能通过返回<code>false</code>来阻止默认行为，必须调用<code>preventDefault</code>方法</p></li></ul><pre lang=\"html\"><code>&lt;a href=\"#\" onclick=\"console.log('The link was clicked.'); return false\"&gt;\n  Click me\n&lt;/a&gt;</code></pre><pre lang=\"js\"><code>function ActionLink() {\n  function handleClick(e) {\n    e.preventDefault();\n    console.log('The link was clicked.');\n  }\n\n  return (\n    &lt;a href=\"#\" onClick={handleClick}&gt;\n      Click me\n    &lt;/a&gt;\n  );\n}</code></pre><p>事件处理函数中需要注意<code>this</code>的使用，如果未进行this的绑定，<code>this</code>的值将未<code>undefined</code>，可以使用如下方法进行处理</p><ul><li><p>构造函数constructor中进行绑定</p></li></ul><pre lang=\"js\"><code>  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }</code></pre><ul><li><p>Class属性定义式，使用箭头函数</p></li></ul><pre lang=\"js\"><code>class LoggingButton extends React.Component {\n  // This syntax ensures `this` is bound within handleClick.\n  // Warning: this is *experimental* syntax.\n  handleClick = () =&gt; {\n    console.log('this is:', this);\n  }\n\n  render() {\n    return (\n      &lt;button onClick={this.handleClick}&gt;\n        Click me\n      &lt;/button&gt;\n    );\n  }\n}</code></pre><ul><li><p>方法调用时使用箭头函数</p></li></ul><pre lang=\"js\"><code>class LoggingButton extends React.Component {\n  handleClick() {\n    console.log('this is:', this);\n  }\n\n  render() {\n    // This syntax ensures `this` is bound within handleClick\n    return (\n      &lt;button onClick={(e) =&gt; this.handleClick(e)}&gt;\n        Click me\n      &lt;/button&gt;\n    );\n  }\n}</code></pre><ul><li><p>绑定时可以传递参数</p></li></ul><pre lang=\"html\"><code>&lt;button onClick={(e) =&gt; this.deleteRow(id, e)}&gt;Delete Row&lt;/button&gt;\n&lt;button onClick={this.deleteRow.bind(this, id)}&gt;Delete Row&lt;/button&gt;</code></pre></article>"}