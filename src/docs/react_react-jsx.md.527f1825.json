{"content": "<article><h3>JSX简介</h3><h4>JSX中使用表达式</h4><pre lang=\"js\"><code>const name = 'Josh Perez';\nconst element = &lt;h1&gt;Hello, {name}&lt;/h1&gt;;\n\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);</code></pre><h4>JSX本身为表达式</h4><pre lang=\"js\"><code>function getGreeting(user) {\n  if (user) {\n    return &lt;h1&gt;Hello, {formatName(user)}!&lt;/h1&gt;;\n  }\n  return &lt;h1&gt;Hello, Stranger.&lt;/h1&gt;;\n}</code></pre><h4>JSX代表着一个对象</h4><p>\b以下二者等价：</p><pre lang=\"js\"><code>const element = (\n  &lt;h1 className=\"greeting\"&gt;\n    Hello, world!\n  &lt;/h1&gt;\n);\n\nconst element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, world!'\n);</code></pre><h4>JSX能够防止注入攻击</h4><p>在渲染时，JSX将自动对内容进行编码，防止出现<a title=\"\" href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">注入攻击</a>，\b开发者可以放心使用</p><pre lang=\"\"><code>const title = response.potentiallyMaliciousInput;\n// This is safe:\nconst element = &lt;h1&gt;{title}&lt;/h1&gt;;</code></pre><h4>JSX语法高亮: <a title=\"\" href=\"https://babeljs.io/docs/en/editors/\">https://babeljs.io/docs/en/editors/</a></h4><ul><li><p>Babel VSCode插件 <a title=\"\" href=\"https://marketplace.visualstudio.com/items?itemName=joshpeng.sublime-babel-vscode\">sublime-babel-vscode</a></p></li></ul></article>"}